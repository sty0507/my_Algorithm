def solution(k, d):
    answer = 0
    for x in range(0, d+1, k):
        y = int((d**2 - x**2) ** (0.5))
        r = y % k
        answer += (y - r) / k + 1
    return answer

"""
원의 방정식을 사용해서 푼다.
원점(0,0)에서 좌표(x,y)까지 떨어진 거리 r
r**2 = x**2 + y**2

반복문을 돌면서 x값에 해당되는 y의 값의 개수를 구하도록 구현되었다.
반복문을 돌면서 원이 점점 거지면서 그 안에 있는 좌표의 개수를 더하는 것이다.
x가 0일때의 좌표 개수, 1일때의 좌표 개수 등등
r = y % k에서는 k 곱만 사용되기 때문에, for문에 k개씩 추가되는 느낌으로 사용된다.
그리고 현재 x의 값에서 찍히는 점의 개수를 구해서 answer에 담아준다.

처음에 나는 피타고라스로 접근을 했는데 이중 반복문을 사용해서 푸니 시간 초과가 났다.
하지만 대부분의 사람들은 원의 방정식으로 풀었길래 나도 다른 사람 것을 참고해서 풀어봤다.
"""